<?php

namespace app\models;

use Yii;
use yii\behaviors\TimestampBehavior;
use yii\db\ActiveRecord;
use yii\db\Expression;
use yii\i18n\Formatter;

/**
 * This is the model class for table "comment".
 *
 * @property int $id
 * @property int $user_id
 * @property string $message
 * @property int $post_id
 * @property int $created_at
 * @property int $updated_at
 * @property int $parent_id
 * @property int $status
 *
 * @property Post $post
 * @property User $user
 * @property Comment $parent
 * @property Comment[] $children
 * @property string $date
 *
 */
class Comment extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'comment';
    }

    public function behaviors()
    {
        return [
                TimestampBehavior::class,
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['message'], 'required'],
            [['created_at', 'updated_at'], 'safe'],
            [['message'], 'string', 'length' => [3, 255]],
            [['post_id', 'parent_id', 'user_id'], 'integer'],
            ['status', 'boolean'],
            [['post_id'], 'exist', 'skipOnError' => true, 'targetClass' => Post::class, 'targetAttribute' => ['post_id' => 'id']],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::class, 'targetAttribute' => ['user_id' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID:',
            'user_id' => 'ID пользователя',
            'message' => 'Сообщение',
            'post_id' => 'Post ID:',
            'created_at' => 'Дата создания',
            'updated_at' => 'Дата обновления',
            'parent_id' => 'ID родителя',
            'status' => 'Статус',
        ];
    }

    /**
     * Gets query for [[Post]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getPost()
    {
        return $this->hasOne(Post::class, ['id' => 'post_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getParent()
    {
        return $this->hasOne(self::class, ['id' => 'parent_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getChildren()
    {
        return $this->hasMany(self::class, ['parent_id' => 'id']);
    }

    public function getUser()
    {
        return $this->hasOne(User::class, ['id' => 'user_id']);
    }

    public function getDate()
    {
        return Yii::$app->formatter->asRelativeTime($this->updated_at);
    }

    public function beforeSave($insert)
    {
        if ($this->user_id == 1) {
            $this->status = 1;
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function changeStatus()
    {
        if ($this->status == 1) {
            $this->status = 0;
        } else {
            $this->status = 1;
        }
        $this->save();
    }
}
